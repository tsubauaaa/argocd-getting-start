apiVersion: v1
kind: Service
metadata:
  name: argoproj-demo-stable
spec:
  type: ClusterIP
  selector:
    app: argoproj-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: argoproj-demo-canary
spec:
  type: ClusterIP
  selector:
    app: argoproj-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: argoproj-demo
spec:
  selector:
    matchLabels:
      app: argoproj-demo
  revisionHistoryLimit: 3
  replicas: 2
  template:
    metadata:
      labels:
        app: argoproj-demo
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: argoproj-demo
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoreDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - argoproj-demo
      serviceAccountName: tsubauaaa-dev
      containers:
        - name: argoproj-demo
          image: argoproj/rollouts-demo:green
          resources:
            requests:
              memory: "84Mi"
            limits:
              cpu: "100m"
          # ports:
          #   - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            preriodSeconds: 5
          readnessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            preriodSeconds: 5
  strategy:
    canary:
      canaryService: argoproj-demo-canary
      stableService: argoproj-demo-stable
      trafficRouting:
        managedRoutes:
          - name: set-header-1
        plugins:
          argoproj-labs/gatewayAPI:
            httpRoutes: 
              - name: tsubauaaa-dev
                useHeaderRoutes: true
            namespace: default
      steps:
        - setCanaryScale:
            replicas: 1
        - setHeaderRoute:
            name: "set-header-1"
            match:
              - headerName: X-Canary
                headerValue:
                  exact: "true"
        - pause: {}
        - setCanaryScale:
            matchTrafficWeight: true 
        - setWeight: 50
        - pause: {}
        - setWeight: 100
        - pause: {}